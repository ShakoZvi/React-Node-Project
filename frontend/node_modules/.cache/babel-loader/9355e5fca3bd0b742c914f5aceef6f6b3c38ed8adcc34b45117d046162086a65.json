{"ast":null,"code":"var _jsxFileName = \"/Users/sh.zviadauri/Sites/React-Node-Project/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from 'react';\nimport { login, register } from '../services/api'; // საჭიროა სწორად იმპორტირება\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // const loginUser = async (email, password) => {\n  //     try {\n  //         const data = await login(email, password);\n  //         setUser(data); // შეგიძლიათ მნიშვნელობად დაუშვათ JWT Token-ი\n  //         localStorage.setItem('user', JSON.stringify(data));\n  //     } catch (error) {\n  //         console.error('Login failed:', error);\n  //     }\n  // };\n  const loginUser = async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/login', {\n        email,\n        password\n      });\n      if (response.data) {\n        setUser(response.data.user); // Set the user data from the response\n        setIsAuthenticated(true); // Mark as authenticated\n        console.log('Login successful:', response.data); // Optional logging\n      } else {\n        console.error('Login failed: No response data');\n      }\n    } catch (error) {\n      var _error$response;\n      console.error('Error logging in:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setIsAuthenticated(false);\n    }\n  };\n  const registerUser = async (name, email, password) => {\n    try {\n      const data = await register(name, email, password);\n      setUser(data); // რეგისტრაციის შემდეგ შეიძლება, დავაბრუნოთ JWT\n      localStorage.setItem('user', JSON.stringify(data));\n    } catch (error) {\n      console.error('Registration failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loginUser,\n      registerUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","login","register","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loginUser","email","password","response","axios","post","data","setIsAuthenticated","console","log","error","_error$response","message","registerUser","name","localStorage","setItem","JSON","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sh.zviadauri/Sites/React-Node-Project/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState } from 'react';\nimport { login, register } from '../services/api'; // საჭიროა სწორად იმპორტირება\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n\n    // const loginUser = async (email, password) => {\n    //     try {\n    //         const data = await login(email, password);\n    //         setUser(data); // შეგიძლიათ მნიშვნელობად დაუშვათ JWT Token-ი\n    //         localStorage.setItem('user', JSON.stringify(data));\n    //     } catch (error) {\n    //         console.error('Login failed:', error);\n    //     }\n    // };\n    const loginUser = async (email, password) => {\n        try {\n            const response = await axios.post('http://localhost:5000/api/auth/login', { email, password });\n            \n            if (response.data) {\n                setUser(response.data.user); // Set the user data from the response\n                setIsAuthenticated(true); // Mark as authenticated\n                console.log('Login successful:', response.data); // Optional logging\n            } else {\n                console.error('Login failed: No response data');\n            }\n        } catch (error) {\n            console.error('Error logging in:', error.response?.data || error.message);\n            setIsAuthenticated(false);\n        }\n    };\n\n\n    const registerUser = async (name, email, password) => {\n        try {\n            const data = await register(name, email, password);\n            setUser(data); // რეგისტრაციის შემდეგ შეიძლება, დავაბრუნოთ JWT\n            localStorage.setItem('user', JSON.stringify(data));\n        } catch (error) {\n            console.error('Registration failed:', error);\n        }\n    };\n\n    return (\n        <AuthContext.Provider value={{ user, loginUser, registerUser }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,KAAK,EAAEC,QAAQ,QAAQ,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMW,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACzC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,sCAAsC,EAAE;QAAEJ,KAAK;QAAEC;MAAS,CAAC,CAAC;MAE9F,IAAIC,QAAQ,CAACG,IAAI,EAAE;QACfP,OAAO,CAACI,QAAQ,CAACG,IAAI,CAACR,IAAI,CAAC,CAAC,CAAC;QAC7BS,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEN,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;MACrD,CAAC,MAAM;QACHE,OAAO,CAACE,KAAK,CAAC,gCAAgC,CAAC;MACnD;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MAAA,IAAAC,eAAA;MACZH,OAAO,CAACE,KAAK,CAAC,mBAAmB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACP,QAAQ,cAAAQ,eAAA,uBAAdA,eAAA,CAAgBL,IAAI,KAAII,KAAK,CAACE,OAAO,CAAC;MACzEL,kBAAkB,CAAC,KAAK,CAAC;IAC7B;EACJ,CAAC;EAGD,MAAMM,YAAY,GAAG,MAAAA,CAAOC,IAAI,EAAEb,KAAK,EAAEC,QAAQ,KAAK;IAClD,IAAI;MACA,MAAMI,IAAI,GAAG,MAAMf,QAAQ,CAACuB,IAAI,EAAEb,KAAK,EAAEC,QAAQ,CAAC;MAClDH,OAAO,CAACO,IAAI,CAAC,CAAC,CAAC;MACfS,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI,CAAC,CAAC;IACtD,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,oBACIjB,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,IAAI;MAAEE,SAAS;MAAEa;IAAa,CAAE;IAAAjB,QAAA,EAC1DA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAC3B,EAAA,CA7CWF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}