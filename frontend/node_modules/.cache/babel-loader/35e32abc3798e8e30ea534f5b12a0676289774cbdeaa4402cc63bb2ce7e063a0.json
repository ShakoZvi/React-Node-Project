{"ast":null,"code":"var _jsxFileName = \"/Users/sh.zviadauri/Sites/React-Node-Project/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const loginUser = async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/login', {\n        email,\n        password\n      });\n      if (response.data) {\n        setUser(response.data.user); // Set the user data from the response\n        setIsAuthenticated(true); // Mark as authenticated\n        console.log('Login successful:', response.data); // Optional logging\n      } else {\n        console.error('Login failed: No response data');\n      }\n    } catch (error) {\n      var _error$response;\n      console.error('Error logging in:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setIsAuthenticated(false);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      loginUser,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"k19B3VQCOMbqjP9Ul958Nm6p/lo=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","loginUser","email","password","response","post","data","console","log","error","_error$response","message","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sh.zviadauri/Sites/React-Node-Project/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\nimport axios from 'axios';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    const loginUser = async (email, password) => {\n        try {\n            const response = await axios.post('http://localhost:5000/api/auth/login', { email, password });\n            \n            if (response.data) {\n                setUser(response.data.user); // Set the user data from the response\n                setIsAuthenticated(true); // Mark as authenticated\n                console.log('Login successful:', response.data); // Optional logging\n            } else {\n                console.error('Login failed: No response data');\n            }\n        } catch (error) {\n            console.error('Error logging in:', error.response?.data || error.message);\n            setIsAuthenticated(false);\n        }\n    };\n\n    const logout = () => {\n        setUser(null);\n        setIsAuthenticated(false);\n    };\n\n    return (\n        <AuthContext.Provider value={{ user, isAuthenticated, loginUser, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMY,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACzC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,sCAAsC,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MAE9F,IAAIC,QAAQ,CAACE,IAAI,EAAE;QACfR,OAAO,CAACM,QAAQ,CAACE,IAAI,CAACT,IAAI,CAAC,CAAC,CAAC;QAC7BG,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1BO,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MACrD,CAAC,MAAM;QACHC,OAAO,CAACE,KAAK,CAAC,gCAAgC,CAAC;MACnD;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MAAA,IAAAC,eAAA;MACZH,OAAO,CAACE,KAAK,CAAC,mBAAmB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACL,QAAQ,cAAAM,eAAA,uBAAdA,eAAA,CAAgBJ,IAAI,KAAIG,KAAK,CAACE,OAAO,CAAC;MACzEX,kBAAkB,CAAC,KAAK,CAAC;IAC7B;EACJ,CAAC;EAED,MAAMY,MAAM,GAAGA,CAAA,KAAM;IACjBd,OAAO,CAAC,IAAI,CAAC;IACbE,kBAAkB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,oBACIR,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,IAAI;MAAEE,eAAe;MAAEE,SAAS;MAAEW;IAAO,CAAE;IAAAjB,QAAA,EACrEA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACtB,EAAA,CA/BWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}