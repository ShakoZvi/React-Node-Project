{"ast":null,"code":"var _jsxFileName = \"/Users/sh.zviadauri/Sites/React-Node-Project/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from 'react';\nimport { login, register } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const navigate = useNavigate();\n  const loginUser = async (email, password) => {\n    try {\n      const data = await login(email, password);\n      if (data.token) {\n        localStorage.setItem('token', data.token); // Save JWT token\n        localStorage.setItem('user', JSON.stringify(data)); // Save user data\n        setUser(data);\n        setIsAuthenticated(true);\n        navigate('/itemlist'); // Use navigate here\n      } else {\n        console.error('No token returned from server');\n      }\n    } catch (error) {\n      console.error('Error logging in:', error);\n      setIsAuthenticated(false);\n    }\n  };\n  const registerUser = async (name, email, password) => {\n    try {\n      const data = await register(name, email, password);\n      setUser(data); // Save user data\n      localStorage.setItem('user', JSON.stringify(data));\n    } catch (error) {\n      console.error('Registration failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loginUser,\n      registerUser,\n      isAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"120FYBni8eYXEldp7DJzs5hNB1g=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","login","register","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","navigate","loginUser","email","password","data","token","localStorage","setItem","JSON","stringify","console","error","registerUser","name","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sh.zviadauri/Sites/React-Node-Project/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState } from 'react';\nimport { login, register } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const navigate = useNavigate();\n\n    const loginUser = async (email, password) => {\n        try {\n            const data = await login(email, password);\n\n            if (data.token) {\n                localStorage.setItem('token', data.token); // Save JWT token\n                localStorage.setItem('user', JSON.stringify(data)); // Save user data\n                setUser(data);\n                setIsAuthenticated(true);\n                navigate('/itemlist'); // Use navigate here\n            } else {\n                console.error('No token returned from server');\n            }\n        } catch (error) {\n            console.error('Error logging in:', error);\n            setIsAuthenticated(false);\n        }\n    };\n\n    const registerUser = async (name, email, password) => {\n        try {\n            const data = await register(name, email, password);\n            setUser(data); // Save user data\n            localStorage.setItem('user', JSON.stringify(data));\n        } catch (error) {\n            console.error('Registration failed:', error);\n        }\n    };\n\n    return (\n        <AuthContext.Provider value={{ user, loginUser, registerUser, isAuthenticated }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,KAAK,EAAEC,QAAQ,QAAQ,iBAAiB;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMc,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACzC,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMjB,KAAK,CAACe,KAAK,EAAEC,QAAQ,CAAC;MAEzC,IAAIC,IAAI,CAACC,KAAK,EAAE;QACZC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;QAC3CC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC;QACpDP,OAAO,CAACO,IAAI,CAAC;QACbL,kBAAkB,CAAC,IAAI,CAAC;QACxBC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;MAC3B,CAAC,MAAM;QACHU,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAC;MAClD;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCZ,kBAAkB,CAAC,KAAK,CAAC;IAC7B;EACJ,CAAC;EAED,MAAMa,YAAY,GAAG,MAAAA,CAAOC,IAAI,EAAEX,KAAK,EAAEC,QAAQ,KAAK;IAClD,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMhB,QAAQ,CAACyB,IAAI,EAAEX,KAAK,EAAEC,QAAQ,CAAC;MAClDN,OAAO,CAACO,IAAI,CAAC,CAAC,CAAC;MACfE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;IACtD,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,oBACIpB,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,IAAI;MAAEK,SAAS;MAAEW,YAAY;MAAEd;IAAgB,CAAE;IAAAJ,QAAA,EAC3EA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACxB,EAAA,CAvCWF,YAAY;EAAA,QAGJJ,WAAW;AAAA;AAAA+B,EAAA,GAHnB3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}